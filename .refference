# setup the virtual enviroment in python
"install virtualenv"
sudo apt install virtualenv
"initialised the reprojectory as virtual enviroment as .venv"
virtualenv .venv
"active the virtual enviroment in terminal"
source .venv/bin/activate "short `activate` using alias"
"For deactivate the virtual enviroment in terminal"
deactivate
"For freeze the module in the virtual enviroment"
pip freeze > requirements.txt

# some important command in tmux
# create a new session
tmux
tmux new -s session_name
"detach the session"
ctrl+b d
"list the session"
tmux ls
"attach the session"
tmux a -t session_name
"kill the session"
tmux kill-session -t session_name
"kill all the session"
tmux kill-server
"rename the session"
tmux rename-session -t old_session_name new_session_name

"Prefix key"
ctrl+k

"shotcut for window"
c  create window
w  list windows
n  next window
p  previous window
f  find window
,  name window
&  kill window

"pane shotcut"
%  vertical split
"  horizontal split

o  swap panes
q  show pane numbers
x  kill pane
+  break pane into window (e.g. to select text by mouse to copy)
-  restore pane from window
‚çΩ  space - toggle between layouts
q (Show pane numbers, when the numbers show up type the key to goto that pane)
{ (Move the current pane left)
} (Move the current pane right)
z toggle pane zoom
"synchronize-panes"
:setw synchronize-panes

"misc"
d  detach
t  big clock
?  list shortcuts
:  prompt


# how to start the Django project
"install the Django"
pip install django
"start the project in project directory"
django-admin startproject root .
"start the app"
python manage.py startapp app_name
"make the migration"
python manage.py makemigrations
"migrate the database"
python manage.py migrate
"check the project"
python manage.py check
"run the server"
python manage.py runserver


# Some Problems encounter in Arch linux wsl setup
error : ldconfig: /usr/lib/wsl/lib/libcuda.so.1 is not a symbolic link
sol:
1. go to dir (cd /usr/lib/wsl/lib/)
2. Delete both libcuda.so and libcuda.so.1 (ensure you have a backup if needed).
	mv libcuda.so libcuda.so.bak
	mv libcuda.so.1 libcuda.so.1.bak
3. create a symbolic link Assuming the actual library is libcuda.so.1.1
	ln -s libcuda.so.1.1 libcuda.so.1

# To uninstall the WSL some distribution
Uninstalling a distro via the settings or store didn't work for me. What did was:
"Enter a cmd or PowerShell prompt,"
wsl -l "to see a list of installed distro names"
wsl --unregister <DistroName>

e.g. wsl --unregister Ubuntu-20.04
"set the default distro"
wsl --setdefault Ubuntu-22.04

